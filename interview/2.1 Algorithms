San, Hirako. Cracking the Full Stack Developer Interview: The Complete Handbook to Land the Job (p. 21). Hirako Publishing. Kindle Edition. 

## Typical Math Questions
- Given a string such as "123" or "67", write a function to output the number represented by the string without using casting.
- Make a program that can print out the text form of numbers from 1 to 9999(ex. 20 is "twenty", "2665 is "two thousand six hundred fifty five")
- How would you convert Roman numerals into decimals?(E.g. XIV becomes 14)
- Compute the square root of an Integer without using any existing built in math functinos.

## Typical Binary Interview Questions
- How do you verify if an integer is a power of 2?
- Write a program to print the binary representations of an integer?
- Write a program to print out the number of 1 bits in a given integer.
- Write a program to determine the next higher integer using the same number of 1 bits in a given number.

## Typical Arrays Interview Questions
- Given an array and an index, find the product of the elements of the array except the element at that index.
- Given 2 seperate arrays, write a method to find the values that exist in both arrays and return them.
- Given an array of numbers, list out all triplets that sum to 0. Do so with a running time of less than O(n^3)
- Given an array of integers, find the subarray with the largest sum
- Find the second maximum value in an array.
- Remove duplicates in an unsorted array where the duplicates are at a distance of k or less from each other.
- Given an unsorted list of integers, return true if the list contains any duplicates within k indices of each element. Do it faster than O(n^2)
- Given an array of string, find the duplicated elements.
- Given an array of integers, modify the arrya by moving all the zeroes to the end(right side). The order of other elements doesn't matter. 
E.G.[1,2,0,3,0,1,2], the program could output[1,2,3,1,2,0,0].
- Given an array of integers where every value appears twice except one, find the single, non-repeating value.
Follow up: do so with O(1) space. E.G\g., [2,5,3,2,1,3,4,5,1] returns 4, beccause it is the only value that appears in the array only once.

# Make sure to be familiar with those algorithms
## Corner Cases
- Strings with only one distinct character.

## Non-repeating Characters
- Use a 26-bit bitmask to indicate which lower case latin characters are inside the string.

## Anagram
- An anagram is word switch or word play.

## Palindrome
- A palindrome is a word, phrase, number, or other sequence of characters which reads the same backward, such as madam or racecar.

## Interval
- Interval quenstions are questions where you are given an array of two-element arrays(an interval) and the two values represent a start and an end vale.
- Interval questions are considered part of the array family but they involve some common techniques hence they are extracted out to this special section of their own.

## Graphs
Typical Graph Interview Questions
1. Given a list of sorted words from an alien dictionary, find the order of the alphabet.
2. Given a graph and two nodes, determine if there exists a path between them.
3. Determine if a cycle exists in a directed graph.

## Matrix
Typuical Matrix Interview Questions
1. Given a 4 x 4 matrix, the task is to interchange the elemnts of the first and last column and show the resulting matrix.
2. Boggle implementation. Given a dictionary, and a matrix of letters, find all the words in the matrix that are in the dictionary.
You can go across, down or diagonally
3. Given a 2D array, print it in sprial form.

## Linked List
Typical Linked List Interview Questions
1. Write a SortedMerge() funciton that takes two lists, each of which is sorted in increasing order, and merges the two together into one list in increasing order.
2. Implement an LRU cache with O(1) runtime for all its operations.
3. Given a singly linked list ( a list which can only be traversed in one direction), find the item that is located at k items from the end.
So if the list is a, b, c, d and k is 2 then the answer is c. 
The solution chould not search the list twice.
4. How can you tell if a Linked List a Palindrome?

## Tree
1. Find the height of a binary tree.
2. Find the deepest left leaf of a binary tree.
3. Given the roots of a tree. Print out all of its root-to-leaf paths one per line.
4. Given a binary tree, print level order traversal in a way that nodes of all levels are printed in seperate lines
5. Determine if a binary tree is "complete"(i.e, if all leaf nodes were either at the maximum depth or max depth-1, and were 'pressed' along the left side of the t ree)
6. Determine if a binary tree is a BST.
7. Given a binary tree, serialize it into a string. Then deserialize it.
8. Given a node, find the next element in a BST.
9. pretty print a JSON object.
10. Convert a binary tree to a doubly circular linked list.
11. Find the second largest number in a binary tree.
12. Convert a tree to a linked list.
13. Find the Deepest node in a Binary tree.

## Trie
Tries are special trees that make searching and storing strings more efficient

## Heap
If you require the top k elements use a Min Heal of size k.
Iterate through each element, pushing it into the heap. Whenever the heap size exceeds k, remove the minimum element,
that will guarantee that you have the k largest elements.

# Recursion & Dynamic Programming
## Recursion
Recursion is useful for permutation, because itgenerates all combinations and tree-based questions.
You should know how to generate all permutations of a sequence as well as how to handle duplicates.
1. Given two number x and y find their product using recursion.
2. Given a number, write a function that returns the sum of its digits using recursion. e.g. "1234" should return 10.

## Dynamic Programming(DP)
Dynamic Programming is usually used to solve optimazation problems.
The only way to get better at DP is to practice. It takes some amount of practice to be able to recognize that a problem can be solved by DP.
1. There are N stations on route of a train. The train goes from station 0 to N-1. The ticket cost for all pair of stations (i,j) is geven where j is greater than i.
Find the minimum cost to reach the destination.
2. Given N friends, each one can remain single or can be paired up with some other friend.
Each friend can be paried only once. Find out the total number of ways in which friends can remain single or can be paired up.




